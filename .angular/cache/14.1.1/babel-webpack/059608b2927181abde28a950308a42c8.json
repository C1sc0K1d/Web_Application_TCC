{"ast":null,"code":"import { ElementRef, EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class InformationsModalComponent {\n  elementRef;\n\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n\n  ngOnInit() {}\n\n  clickOutside = new EventEmitter();\n\n  onClick(event, targetElement) {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n\n    if (!clickedInside) {\n      this.clickOutside.emit(event);\n    }\n  }\n\n  static ɵfac = function InformationsModalComponent_Factory(t) {\n    return new (t || InformationsModalComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InformationsModalComponent,\n    selectors: [[\"app-informations-modal\"]],\n    hostBindings: function InformationsModalComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function InformationsModalComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event, $event.target);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    outputs: {\n      clickOutside: \"clickOutside\"\n    },\n    decls: 2,\n    vars: 0,\n    template: function InformationsModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" informations-modal works!\\n\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"*[_ngcontent-%COMP%]{min-height:auto;min-width:auto;height:20%;width:20%;margin:auto;z-index:20}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
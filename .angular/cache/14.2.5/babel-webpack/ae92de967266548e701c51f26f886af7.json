{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { CommonModule, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './welcome/login/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MqttModule } from \"ngx-mqtt\";\nimport { environment as env } from '../environments/environment';\nimport { MqttRequest } from './utils/services/mqtt-request.component';\nimport { Requests } from './utils/services/requests.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-mqtt\";\nconst MQTT_SERVICE_OPTIONS = {\n  hostname: env.mqtt.server,\n  port: env.mqtt.port,\n  protocol: env.mqtt.protocol === \"wss\" ? \"wss\" : \"ws\",\n  path: ''\n};\nexport class AppModule {\n  static ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy\n    }, AuthService, AuthGuard, MqttRequest, Requests],\n    imports: [BrowserModule, CommonModule, AppRoutingModule, HttpClientModule, MqttModule.forRoot(MQTT_SERVICE_OPTIONS)]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}